# microservice specific routes

POST         /new                                   controllers.VatRegistrationController.newVatRegistration
POST         /insert-s4l-scheme                         controllers.VatRegistrationController.insertVatScheme

# Traffic Management API
POST         /traffic-management/:regId/allocate    controllers.TrafficManagementController.allocate(regId)
GET          /traffic-management/:regId/reg-info    controllers.TrafficManagementController.getRegInfoById(regId)
PUT          /traffic-management/:regId/reg-info    controllers.TrafficManagementController.upsertRegInfoById(regId)
DELETE       /traffic-management/:regId/reg-info    controllers.TrafficManagementController.deleteRegInfoById(regId)

GET          /scheme                                controllers.VatRegistrationController.retrieveVatSchemeByInternalId()
GET          /threshold/:date                        controllers.VatThresholdController.getThresholdForDate(date: String)

GET          /:regId/get-scheme                     controllers.VatRegistrationController.retrieveVatScheme(regId: String)

GET          /:regId/flat-rate-scheme               controllers.FlatRateSchemeController.fetchFlatRateScheme(regId)
PATCH        /:regId/flat-rate-scheme               controllers.FlatRateSchemeController.updateFlatRateScheme(regId)
DELETE       /:regId/flat-rate-scheme               controllers.FlatRateSchemeController.removeFlatRateScheme(regId)

GET          /:regId/acknowledgement-reference      controllers.VatRegistrationController.getAcknowledgementReference(regId: String)

PUT          /:regID/submit-registration            controllers.VatRegistrationController.submitVATRegistration(regID : String)

GET          /:regId/status                         controllers.VatRegistrationController.getDocumentStatus(regId: String)

GET          /:regId/bank-account                   controllers.VatRegistrationController.fetchBankAccountDetails(regId)
PATCH        /:regId/bank-account                   controllers.VatRegistrationController.updateBankAccountDetails(regId)

GET         /:regId/eligibility-data                controllers.EligibilityController.getEligibilityData(regId: String)
PATCH       /:regId/eligibility-data                controllers.EligibilityController.updateEligibilityData(regId: String)

PATCH       /:regId/honesty-declaration             controllers.VatRegistrationController.storeHonestyDeclaration(regId: String)

PATCH       /:regId/nrs-payload                     controllers.NrsSubmissionPayloadController.storeNrsSubmissionPayload(regId: String)

POST        /:regId/upscan-reference                controllers.UpscanController.createUpscanDetails(regId: String)
GET         /:regId/upscan-file-details/:reference  controllers.UpscanController.getUpscanDetails(regId: String, reference: String)
GET         /:regId/upscan-file-details             controllers.UpscanController.getAllUpscanDetails(regId: String)
DELETE      /:regId/upscan-file-details/:reference  controllers.UpscanController.deleteUpscanDetails(regId: String, reference: String)
DELETE      /:regId/upscan-file-details             controllers.UpscanController.deleteAllUpscanDetails(regId: String)
POST        /upscan-callback                        controllers.UpscanController.upscanDetailsCallback

GET         /:regId/partners/:index                 controllers.PartnersController.getPartner(regId: String, index: Int)
PUT         /:regId/partners/:index                 controllers.PartnersController.upsertPartner(regId: String, index: Int)
DELETE      /:regId/partners/:index                 controllers.PartnersController.deletePartner(regId: String, index: Int)
GET         /:regId/partners                        controllers.PartnersController.getPartners(regId: String)

GET         /:regId/attachments                     controllers.AttachmentsController.getAttachmentList(regId: String)
GET         /:regId/incomplete-attachments          controllers.AttachmentsController.getIncompleteAttachments(regId: String)
PUT         /:regId/attachments                     controllers.AttachmentsController.storeAttachmentDetails(regId: String)

POST        /sdes-notification-callback             controllers.SdesController.sdesCallback