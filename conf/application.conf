# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName = "vat-registration"

mongo-async-driver {
  pekko {
    loglevel = WARNING
  }
}

# Fix for SSLEngine closed already exception
http-verbs.retries.ssl-engine-closed-already.enabled = true

# Play Modules
# ~~~~
# Additional play modules can be added here

include "backend.conf"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "featureswitch.core.config.FeatureSwitchingModule"
play.modules.enabled += "config.DIModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

logger.application: DEBUG


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# the value below is valid for local environment only
json.encryption.key = "MTIzNDU2Nzg5MDEyMzQ1Ng=="

# Microservice specific config

auditing {
  enabled = true
}

mongodb {
  uri = "mongodb://localhost:27017/vat-registration"
}

microservice {

  services {
    auth {
      host = localhost
      port = 8500
    }

    email {
      host = localhost
      port = 8300
    }

    integration-framework {
      url = "http://localhost:9896"
      environment = "local"
      authorization-token = "Fake Token"
    }

    incorporation-information {
      host = localhost
      uri = "/incorporation-information"
      port = 9976
    }

    company-registration {
      host = localhost
      port = 9973
    }

    vat-registration {
      host = localhost
      port = 9896
    }

    non-repudiation {
      api-key = "not-a-key"
      host = localhost
      port = 9159
      numberOfRetries = 1
      initialDelay = 500 milliseconds
    }

    sdes {
      api-key = "not-a-key"
      informationType = "1655996667080"     # test value
      recipientOrSender = "400063095160"    # test value
      host = localhost
      port = 12345
    }
  }
}

feature-switch {
    post-submission-decoupling = true
    post-submission-non-decoupling = true
}

#TTL config
cache {
  expiryInSeconds = 604800 # 7 days
  upscan.expiryInSeconds = 43200 # 12 hours
}

play.ws.timeout.request = 32.seconds

play.http.parser.maxMemoryBuffer = 300K

constants.emailCheck = "@fake.contact.me,@fake2.contact.me"

schemas {
    api1364 {
        suppressedErrors = ""
    }
}
